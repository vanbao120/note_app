type Query {
    folders: [Folder]
    folder(folderId: String!): Folder
    note(noteId: String): Note
}

type Folder {
    id: String
    name: String
    createdAt: String
    author: Author
    notes: [Note]
}

scalar Date

type Note {
    id: String
    content: String
    updatedAt: Date
}

type Author {
    name: String
    uid: String!
}

type Message {
    message: String
    deletedCount: Int
}

type MessageRes {
    message: String
}

type Mutation {
    addFolder(name: String!): Folder
    addNote(content: String!, folderId: String!): Note
    updateNote(content: String!, id: String!): Note
    register(name: String!, uid: String!): Author
    deleteFolder(folderId: String!): Message
    pushNotification(content: String!): MessageRes
}

type Subscription {
    folderCreated: MessageRes
    notification: MessageRes
}